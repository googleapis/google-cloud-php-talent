<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/talent/v4beta1/filters.proto

namespace Google\Cloud\Talent\V4beta1\CompensationFilter;

/**
 * Specify the type of filtering.
 *
 * Protobuf type <code>google.cloud.talent.v4beta1.CompensationFilter.FilterType</code>
 */
class FilterType
{
    /**
     * Filter type unspecified. Position holder, INVALID, should never be used.
     *
     * Generated from protobuf enum <code>FILTER_TYPE_UNSPECIFIED = 0;</code>
     */
    const FILTER_TYPE_UNSPECIFIED = 0;
    /**
     * Filter by `base compensation entry's` unit. A job is a match if and
     * only if the job contains a base CompensationEntry and the base
     * CompensationEntry's unit matches provided [units][google.cloud.talent.v4beta1.CompensationFilter.units].
     * Populate one or more [units][google.cloud.talent.v4beta1.CompensationFilter.units].
     * See [CompensationInfo.CompensationEntry][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry] for definition of
     * base compensation entry.
     *
     * Generated from protobuf enum <code>UNIT_ONLY = 1;</code>
     */
    const UNIT_ONLY = 1;
    /**
     * Filter by `base compensation entry's` unit and amount / range. A job
     * is a match if and only if the job contains a base CompensationEntry, and
     * the base entry's unit matches provided [compensation_units][] and amount
     * or range overlaps with provided [compensation_range][].
     * See [CompensationInfo.CompensationEntry][google.cloud.talent.v4beta1.CompensationInfo.CompensationEntry] for definition of
     * base compensation entry.
     * Set exactly one [units][google.cloud.talent.v4beta1.CompensationFilter.units] and populate [range][google.cloud.talent.v4beta1.CompensationFilter.range].
     *
     * Generated from protobuf enum <code>UNIT_AND_AMOUNT = 2;</code>
     */
    const UNIT_AND_AMOUNT = 2;
    /**
     * Filter by annualized base compensation amount and `base compensation
     * entry's` unit. Populate [range][google.cloud.talent.v4beta1.CompensationFilter.range] and zero or more [units][google.cloud.talent.v4beta1.CompensationFilter.units].
     *
     * Generated from protobuf enum <code>ANNUALIZED_BASE_AMOUNT = 3;</code>
     */
    const ANNUALIZED_BASE_AMOUNT = 3;
    /**
     * Filter by annualized total compensation amount and `base compensation
     * entry's` unit . Populate [range][google.cloud.talent.v4beta1.CompensationFilter.range] and zero or more [units][google.cloud.talent.v4beta1.CompensationFilter.units].
     *
     * Generated from protobuf enum <code>ANNUALIZED_TOTAL_AMOUNT = 4;</code>
     */
    const ANNUALIZED_TOTAL_AMOUNT = 4;
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(FilterType::class, \Google\Cloud\Talent\V4beta1\CompensationFilter_FilterType::class);

